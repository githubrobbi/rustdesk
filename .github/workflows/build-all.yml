name: Build & Publish RustDesk Binaries

# 1) Only run when a GitHub Release is published via the UI or API
on:
  release:
    types: [published]

defaults:
  run:
    shell: bash

jobs:
  # 2) Build for every platform
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo git checkouts
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-git-

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          cache: cargo

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rustdesk*

  # 3) Once all builds finish, collect and publish them
  publish:
    name: Publish Release Assets & DOWNLOADS.md
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: true     # for the commit step

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: rustdesk-*

      - name: Upload binaries to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            target/x86_64-unknown-linux-gnu/release/rustdesk
            target/aarch64-unknown-linux-gnu/release/rustdesk
            target/x86_64-pc-windows-gnu/release/rustdesk.exe
            target/x86_64-apple-darwin/release/rustdesk
            target/aarch64-apple-darwin/release/rustdesk
          asset_name: |
            rustdesk-linux-x64
            rustdesk-linux-arm64
            rustdesk-windows-x64.exe
            rustdesk-macos-x64
            rustdesk-macos-arm64
          asset_content_type: application/octet-stream

      - name: Generate DOWNLOADS.md
        run: |
          cat > DOWNLOADS.md <<EOF
          # RustDesk ${{ github.event.release.tag_name }} Downloads

          | Platform           | Link |
          |--------------------|------|
          | Linux x86_64       | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/rustdesk-linux-x64) |
          | Linux ARM64        | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/rustdesk-linux-arm64) |
          | Windows x86_64     | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/rustdesk-windows-x64.exe) |
          | macOS x86_64       | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/rustdesk-macos-x64) |
          | macOS ARM64 (M1)   | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/rustdesk-macos-arm64) |
          EOF

      - name: Commit DOWNLOADS.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "ðŸ“¦ Update DOWNLOADS.md for ${{ github.event.release.tag_name }}"
          file_pattern: DOWNLOADS.md
